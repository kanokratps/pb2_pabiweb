<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pb.repo.exp.dao.ExpUseDAO">
    <resultMap id="result" type="expUseModel">
        <result property="id" column="id"/>
        <result property="reqBy" column="req_by"/>
        <result property="objective" column="objective"/>
        <result property="isReason" column="is_reason"/>
        <result property="reason" column="reason"/>
        <result property="note" column="note"/>
        <result property="isSmallAmount" column="is_small_amount"/>
        <result property="brwIsSmallAmount" column="brw_is_small_amount"/>
        <result property="budgetCc" column="budget_cc"/>
        <result property="budgetCcType" column="budget_cc_type"/>
        <result property="budgetCcName" column="budget_cc_name"/>
        <result property="budgetCcTypeName" column="budget_cc_type_name"/>
        <result property="fundId" column="fund_id"/>
        <result property="fundName" column="fund_name"/>
        <result property="costControlTypeId" column="cost_control_type_id"/>
        <result property="costControlId" column="cost_control_id"/>
        <result property="costControl" column="cost_control"/>
        <result property="costControlFrom" column="cost_control_from"/>
        <result property="costControlTo" column="cost_control_to"/>
        <result property="costControlTypeName" column="cost_control_type_name"/>
        <result property="costControlName" column="cost_control_name"/>
        <result property="bank" column="bank"/>
        <result property="bankType" column="bank_type"/>
        <result property="payType" column="pay_type"/>
        <result property="payTypeName" column="pay_type_name"/>
        <result property="payDtl1" column="pay_dtl1"/>
        <result property="payDtl2" column="pay_dtl2"/>
        <result property="payDtl3" column="pay_dtl3"/>
        <result property="ichargeName" column="icharge_name"/>
        <result property="ichargeTypeName" column="icharge_type_name"/>
        <result property="emotion" column="emotion"/>
        <result property="workflowInsId" column="workflow_ins_id"/>
        <result property="docRef" column="doc_ref"/>
        <result property="folderRef" column="folder_ref"/>
        <result property="waitingLevel" column="waiting_level"/>
        <result property="requestedTime" column="requested_time"/>
        <result property="createdTime" column="created_time"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="wfBy" column="wf_by"/>
        <result property="wfByTime" column="wf_by_time"/>
        <result property="wfStatus" column="wf_status"/>
        <result property="rewarning" column="rewarning"/>
        <result property="waitingDay" column="waiting_day"/>
        <result property="infId" column="inf_id"/>
        <result property="prTotal" column="pr_total"/>
    </resultMap>
    
    <select id="list" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="map">
		select *,COUNT(*) OVER() totalRowCount
		from pb2_exp_use_view
		where 
		<if test="monitorUser != null">
			((status != 'D') or (status='D' and created_by_code = #{loginE}))
		</if>
		<if test="monitorUser == null">
			(created_by_code = #{loginE} or (req_by_code = #{loginE} and status!='D') or all_rev ilike '%'||#{loginL}||'%' )
		</if>
		<if test="terms != null">
			<foreach item="item" index="index" collection="terms" open="AND (" separator=" AND " close=")">
				concat(id,' ',objective, ' ',created_by, ' ',created_by_th, ' ',req_by, ' ',req_by_th, ' ',pay_type_name, ' ',pay_type_name_th,' ', to_char(requested_time, 'dd/mm/yyyy'), ' ', budget_cc_name, ' ', budget_cc_name_th) ILIKE '%'||#{item}||'%'
	   		</foreach>
   		</if>  
		<if test="status != null">
			AND status=#{status}
		</if>
		<if test="pay_type != null">
			AND pay_type=#{pay_type}
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>
    
    <select id="llist" resultMap="result" parameterType="map">
        SELECT
		    REQ.ID, total, objective, reason,
		    	budget_cc, budget_cc_type, CASE WHEN #{lang}='' THEN b.name ELSE b.name_th END budget_cc_name,
		    	WF_BY, WF_BY_TIME,
				WF_STATUS, STATUS, 
				cost_control_id, cost_control_type_id,
				cost_control,
				cost_control_from, cost_control_to,
				bank, bank_type, 
				WORKFLOW_INS_ID, TASK_ID,
				REQ.UPDATED_TIME, REQ.UPDATED_BY, REQ.CREATED_TIME, 
				FOLDER_REF, DOC_REF,
  			CASE 
  				WHEN STATUS='D' THEN '1'
            	WHEN STATUS='W2' THEN '2'
            	WHEN STATUS='W1' THEN '3'
            	WHEN STATUS='S' THEN '4'
            	WHEN STATUS='C1' THEN '5'
            	WHEN STATUS='C2' THEN '6'
            	WHEN STATUS='X1' THEN '7'
            	WHEN STATUS='X2' THEN '8'
            	ELSE STATUS
       		END ORDER_FIELD,
	      	COALESCE(CBY ,REQ.CREATED_BY) CREATED_BY,
	      	COALESCE(RBY ,REQ_BY) REQ_BY,
			mm.name pay_type_name,
		    COUNT(*) OVER() totalRowCount
		FROM
		    (SELECT ID, total, objective, reason, budget_cc, budget_cc_type,
		    	NULL WF_BY, NULL WF_BY_TIME,
				NULL WF_STATUS, STATUS, cost_control_id, cost_control_type_id,
				cost_control,
				cost_control_from,cost_control_to,
				bank, bank_type,
				pay_type,
				WORKFLOW_INS_ID, NULL TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e3.id), e3.first_name)
					END
					first_name
				from pb2_ext_hr_employee e3 where lpad(employee_code,6,'0') = pb2_exp_use.created_by) CBY,
				FOLDER_REF, DOC_REF, REQ_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e4.id), e4.first_name)
					END
					first_name
				from pb2_ext_hr_employee e4 where lpad(employee_code,6,'0') = pb2_exp_use.req_by) RBY
			FROM pb2_exp_use
			WHERE STATUS='D' AND CREATED_BY=#{loginE}
 			UNION
			SELECT ID, M.total, objective, reason, budget_cc, budget_cc_type,
				W.BY WF_BY,
				CASE WHEN (W.STATUS IS NULL) THEN ''
				ELSE to_char(W.BY_TIME, 'DD/MM/YYYY HH24:MI') 
				END WF_BY_TIME,
				W.STATUS${lang} WF_STATUS, M.STATUS, cost_control_id, cost_control_type_id,
				cost_control,
				cost_control_from,cost_control_to,
				bank, bank_type,
				pay_type,
				M.WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e1.id), e1.first_name)
					END
					first_name
				from pb2_ext_hr_employee e1 where lpad(employee_code,6,'0') = M.created_by) CBY,
				FOLDER_REF, DOC_REF, REQ_BY,
				(select CASE 
					WHEN #{lang}='' THEN 
						first_name
					ELSE
						coalesce((select value
						from pb2_ext_ir_translation
						where name = 'hr.employee,first_name'
						and type = 'model' and lang='th_TH'
						and res_id = e2.id), e2.first_name)
					END
					first_name
				from pb2_ext_hr_employee e2 where lpad(employee_code,6,'0') = M.req_by) RBY 
			FROM pb2_exp_use M LEFT JOIN 
			(
			SELECT MASTER_ID, WORKFLOW_INS_ID, STATUS, STATUS_TH, 
			CASE 
			WHEN #{lang}='' THEN 
				e.first_name
			ELSE
				coalesce((select value
				from pb2_ext_ir_translation
				where name = 'hr.employee,first_name'
				and type = 'model' and lang='th_TH'
				and res_id = e.id), e.first_name)
			END as
			BY, BY_TIME, TASK_ID 
			FROM pb2_main_workflow w  left join pb2_ext_hr_employee e on w.by = lpad(e.employee_code,6,'0')
			WHERE TYPE='EXP_USE' AND 
			w.ID IN (
				SELECT MAX(ID)
				FROM pb2_main_workflow 
				GROUP BY MASTER_ID
			)) AS W ON M.ID = W.MASTER_ID 
			WHERE M.STATUS != 'D'
			AND (
	 			ID IN ( 
					SELECT master_id 
					FROM pb2_main_workflow_reviewer 
					WHERE reviewer_user LIKE #{loginL} 
					<foreach item="item" index="index" collection="roleList"
				      open="OR (" separator="OR" close=")">
				        reviewer_group LIKE #{item}
				    </foreach>
					GROUP BY master_id
				)
				OR id IN (SELECT master_id FROM pb2_main_workflow_next_actor WHERE actor_user LIKE #{loginE} GROUP BY master_id)
				OR CREATED_BY = #{loginE} 
				OR REQ_BY = #{loginE}
			)
		) REQ
		LEFT JOIN
		(
			select 'U' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select code,id,name,
				coalesce((select value
					from pb2_ext_ir_translation
					where name = 'res.section,name'
					and type = 'model' and lang='th_TH'
					and res_id = sec.id), name) as name_th
				from pb2_ext_res_section sec) s
			union
			select 'P' _type,id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',name_th) name_th
			from (select p.id,p.name, p.code,
			coalesce((select value
				from pb2_ext_ir_translation
				where name = 'res.project,name'
				and type = 'model' and lang='th_TH'
				and res_id = p.id), p.name) as name_th
				FROM pb2_ext_res_project p) pro
		) b on (REQ.budget_cc_type = b._type and REQ.budget_cc = b.id)
		LEFT JOIN
		pb2_main_master mm on REQ.pay_type=mm.code and mm.type='EXP_TYPE'
		WHERE
			1=1
		<if test="terms != null">
			<foreach item="item" index="index" collection="terms" open="AND (" separator=" AND " close=")">
	    			concat(REQ.id, ' ', objective, ' ', reason) ILIKE '%'||#{item}||'%'
	   		</foreach>
   		</if>  
		<if test="status != null">
			AND status=#{status}
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>
    
    <select id="listForSearch" resultMap="result" parameterType="map">
        SELECT
		    REQ.ID, total, objective, reason,
		    	budget_cc, budget_cc_type, b.name budget_cc_name,
				WF_STATUS, STATUS, 
				cost_control_id, cost_control_type_id, 
				WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, 
				FOLDER_REF, DOC_REF,
  			CASE 
  				WHEN STATUS='D' THEN '1'
            	WHEN STATUS='W2' THEN '2'
            	WHEN STATUS='W1' THEN '3'
            	WHEN STATUS='S' THEN '4'
            	WHEN STATUS='C1' THEN '5'
            	WHEN STATUS='C2' THEN '6'
            	WHEN STATUS='X1' THEN '7'
            	WHEN STATUS='X2' THEN '8'
            	ELSE STATUS
       		END ORDER_FIELD,
	      	COALESCE(CBY ,CREATED_BY) CREATED_BY,
	      	COALESCE(RBY ,REQ_BY) REQ_BY,
		    COUNT(*) OVER() totalRowCount
		FROM
		    (SELECT ID, M.total, objective, reason, budget_cc, budget_cc_type,
				CASE WHEN (W.STATUS IS NULL) THEN ''
				ELSE CONCAT (W.BY ,'-', W.STATUS ,'-', to_char(W.BY_TIME, 'DD/MM/YYYY HH24:MI')) 
				END WF_STATUS, M.STATUS, cost_control_id, cost_control_type_id,
				M.WORKFLOW_INS_ID, TASK_ID,
				UPDATED_TIME, UPDATED_BY, CREATED_TIME, CREATED_BY,
				(select first_name from pb2_ext_hr_employee where lpad(employee_code,6,'0') = M.created_by) CBY,
				FOLDER_REF, DOC_REF, REQ_BY,
				(select first_name from pb2_ext_hr_employee where lpad(employee_code,6,'0') = M.req_by) RBY 
			FROM pb2_exp_use M LEFT JOIN 
			(
			SELECT MASTER_ID, WORKFLOW_INS_ID, STATUS, e.first_name as BY, BY_TIME, TASK_ID 
			FROM pb2_main_workflow w  left join pb2_ext_hr_employee e on w.by = lpad(e.employee_code,6,'0')
			WHERE TYPE='EXP_USE' AND 
			w.ID IN (
				SELECT MAX(ID)
				FROM pb2_main_workflow 
				GROUP BY MASTER_ID
			)) AS W ON M.ID = W.MASTER_ID 
			WHERE M.STATUS not in ('D','X1','X2')
		) REQ
		LEFT JOIN
		(
			select 'U' _type,id,name
			from pb2_ext_res_section
			union
			select 'P' _type,id,name
			from pb2_ext_res_project
		) b on (REQ.budget_cc_type = b._type and REQ.budget_cc = b.id)
		
		WHERE
			1=1
		<if test="searchTerm != null">
		AND (REQ.id ilike #{searchTerm}
			OR objective ilike #{searchTerm}
			)			
		</if>
		ORDER BY ${orderBy}
		LIMIT #{limit}
		OFFSET #{start}
    </select>    
    
    <insert
		id="add"
		parameterType="expUseModel"
		flushCache="true"
		statementType="PREPARED"
		keyProperty="id"
		useGeneratedKeys="true"
		>
	    INSERT INTO pb2_exp_use(
	    	id
	    	,req_by
	    	,objective
	    	,is_reason
	    	,reason
	    	,note
	    	,is_small_amount
	    	,budget_cc,budget_cc_type
	    	,fund_id
	    	,cost_control_id,cost_control_type_id,cost_control
	    	,cost_control_from,cost_control_to
	    	,bank_type,bank
	    	,pay_type,pay_dtl1,pay_dtl2,pay_dtl3
	    	,total
	    	,doc_ref,folder_ref
	    	,waiting_level,status
	    	,created_by,updated_by
	    	,requested_time
	    	,inf_id
	    ) VALUES (
	    	#{id}
	    	,#{reqBy}
	    	,#{objective}
	    	,#{isReason}
	    	,#{reason}
	    	,#{note}
	    	,#{isSmallAmount}
	    	,#{budgetCc},#{budgetCcType}
	    	,#{fundId}
	    	,#{costControlId},#{costControlTypeId},#{costControl}
	    	,#{costControlFrom},#{costControlTo}
	    	,#{bankType},#{bank}
	    	,#{payType},#{payDtl1},#{payDtl2},#{payDtl3}
    		,#{total}
    		,#{docRef},#{folderRef}
    		,#{waitingLevel},#{status}
    		,#{createdBy},#{updatedBy}
    		,#{requestedTime}
    		,#{infId}
    	)
		
	</insert>
	
	<select id="count"  resultType="long">
        SELECT
		    count(1)
		FROM
		    pb2_exp_use
	
    </select>
	
	<delete id="delete"
    		parameterType="string"
			flushCache="true"
			statementType="PREPARED"
			>
   		DELETE FROM pb2_exp_use WHERE id=#{id}
	</delete>
	
	<update id="update" 
        parameterType="expUseModel"
		flushCache="true">
     UPDATE pb2_exp_use 
     SET 
     	workflow_ins_id=#{workflowInsId}
		<if test="status != null">
     		,status=#{status}
		</if>			
		,req_by =#{reqBy}
	    ,objective =#{objective}
	    ,is_reason =#{isReason}
	    ,reason =#{reason}
	    ,note =#{note}
	    ,is_small_amount =#{isSmallAmount}
	    ,budget_cc =#{budgetCc}
	    ,budget_cc_type =#{budgetCcType}
	    ,fund_id =#{fundId}
	    ,cost_control_type_id =#{costControlTypeId}
	    ,cost_control_id =#{costControlId}
	    ,cost_control =#{costControl}
	    ,cost_control_from =#{costControlFrom}
	    ,cost_control_to =#{costControlTo}
	    ,bank_type =#{bankType}
	    ,bank =#{bank}
	    ,pay_type =#{payType}
	    ,pay_dtl1 =#{payDtl1}
	    ,pay_dtl2 =#{payDtl2}
	    ,pay_dtl3 =#{payDtl3}
	    ,total =#{total}
	    ,doc_ref =#{docRef}
	    ,folder_ref =#{folderRef}
	    ,waiting_level =#{waitingLevel}
        ,updated_by =#{updatedBy}
        ,updated_time =Now()
        ,requested_time =#{requestedTime}
     WHERE id=#{id}
    </update>
    
    <select id="get" parameterType="map" resultMap="result">
        SELECT
		    *, CASE WHEN #{lang}='' THEN b.name ELSE b.name_th END budget_cc_name,
		    c.name cost_control_name, ct.name cost_control_type_name, f.name fund_name,
		    CASE 
  				WHEN r.budget_cc_type='U' THEN CASE WHEN #{lang}='' THEN 'Organization' ELSE 'หน่วยงาน' END 
            	WHEN r.budget_cc_type='P' THEN CASE WHEN #{lang}='' THEN 'Project' ELSE 'โครงการ' END
            	WHEN r.budget_cc_type='A' THEN CASE WHEN #{lang}='' THEN 'Asset' ELSE 'ครุภัณฑ์หลัก' END
            	WHEN r.budget_cc_type='C' THEN CASE WHEN #{lang}='' THEN 'Construction' ELSE 'สิ่งก่อสร้าง' END
            	ELSE r.budget_cc_type
       		END budget_cc_type_name,
       		CASE WHEN #{lang}='' THEN ic.name ELSE ic.name_th END  icharge_name,
       		CASE 
  				WHEN pay_dtl2='U' THEN CASE WHEN #{lang}='' THEN 'Organization' ELSE 'หน่วยงาน' END
            	WHEN pay_dtl2='P' THEN CASE WHEN #{lang}='' THEN 'Project' ELSE 'โครงการ' END
            	WHEN pay_dtl2='A' THEN CASE WHEN #{lang}='' THEN 'Asset' ELSE 'ครุภัณฑ์หลัก' END
            	WHEN pay_dtl2='C' THEN CASE WHEN #{lang}='' THEN 'Construction' ELSE 'สิ่งก่อสร้าง' END
            	ELSE pay_dtl2
       		END icharge_type_name,
       		( SELECT 1
                   FROM pb2_ext_wf_emotion_activity_group_section_rel e
                  WHERE e.section_id = r.budget_cc
                 LIMIT 1) AS emotion,
            brw.is_small_amount brw_is_small_amount,
            pr.total_cnv pr_total,
            pay_dtl2
		FROM
		    pb2_exp_use r
		LEFT JOIN
		(
			select 'U' _type,sec.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		    from pb2_ext_res_section sec left join 
		    (select res_id,value name_th
		     from pb2_ext_ir_translation
		     where name = 'res.section,name'
		     and type = 'model' and lang='th_TH') as  ir on sec.id = ir.res_id 
		   union
		   select 'P' _type,p.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		   from pb2_ext_res_project p left join
		   (select res_id,value name_th
		    from pb2_ext_ir_translation
		    where name = 'res.project,name'
		    and type = 'model' and lang='th_TH') as ir on p.id = ir.res_id 
		   union
		   select 'A' _type,a.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		   FROM pb2_ext_res_invest_asset a left join
		   (select res_id,value name_th
		    from pb2_ext_ir_translation
		    where name = 'res.invest_asset,name'
		    and type = 'model' and lang='th_TH') as ir on a.id = ir.res_id 
		    union
		    select 'C' _type,c.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		   FROM pb2_ext_res_invest_construction_phase c  left join
		  (select res_id,value name_th
		    from pb2_ext_ir_translation
		    where name = 'res.invest_construction_phase,name'
		    and type = 'model' and lang='th_TH') as ir on c.id = ir.res_id
		) b on (r.budget_cc_type = b._type and r.budget_cc = b.id)		
		
		LEFT JOIN
		(
			select 'U' _type,sec.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		    from pb2_ext_res_section sec left join 
		    (select res_id,value name_th
		     from pb2_ext_ir_translation
		     where name = 'res.section,name'
		     and type = 'model' and lang='th_TH') as  ir on sec.id = ir.res_id 
		   union
		   select 'P' _type,p.id,concat('[',trim(code),'] ',name) "name", concat('[',trim(code),'] ',coalesce(name_th,name)) name_th
		   from pb2_ext_res_project p left join
		   (select res_id,value name_th
		    from pb2_ext_ir_translation
		    where name = 'res.project,name'
		    and type = 'model' and lang='th_TH') as ir on p.id = ir.res_id 
		) ic on (r.pay_dtl2 = ic._type and REGEXP_REPLACE(COALESCE(
			  case 
	  			when r.pay_dtl1 ~ '^[0-9\.]+$' then r.pay_dtl1
 	  			else '0'
	  			end
		, '0'), '[^0-9]*' ,'0')::integer = ic.id)
		
		LEFT JOIN pb2_ext_res_fund f on (r.fund_id = f.id)
		
		LEFT JOIN pb2_ext_cost_control c on (r.cost_control_id = c.id)
		LEFT JOIN pb2_ext_cost_control_type ct on (r.cost_control_type_id = ct.id)
		
		LEFT JOIN pb2_exp_brw brw on (r.pay_dtl1 = brw.id)
		
		LEFT JOIN pb2_pcm_req pr on (r.pay_dtl2 = pr.id)
		
		WHERE r.id=#{id}
    </select>
    
    <select id="getForWfPath" parameterType="map" resultType="map">
        SELECT
		    *
		FROM
		    pb2_exp_use r
		WHERE r.id=#{id}
    </select>    
    
    <select id="genNewId" parameterType="map" resultType="string">
    	SELECT CONCAT(field2,TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMM'),'-',TRIM(TO_CHAR(CAST (RIGHT(id, 3) AS INT)+1,'000'))) NEW_ID 
    	FROM pb2_exp_use
    	WHERE field2 = #{f2}
    	AND CONCAT(field2,TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMM'),'-') = SUBSTRING(id,1,LENGTH(ID)-3) 
    	ORDER BY id DESC 
    	LIMIT 1
    </select>
    
    <select id="getLastId" parameterType="map" resultType="string">
    	SELECT id 
    	FROM pb2_exp_use
    	WHERE id like #{idPrefix}
    	ORDER BY id DESC 
    	LIMIT 1
    </select>
    
	<select id="getNewRunningNo"  resultType="long">
		SELECT nextval('pb2_exp_use_id_seq')
    </select>
    
	<select id="resetRunningNo"  resultType="long">
		SELECT setval('pb2_exp_use_id_seq',1,false)	
    </select>
    
    <update id="updateStatus" 
        parameterType="expUseModel"
		flushCache="true">
     UPDATE pb2_exp_use 
     SET  
	<if test="status != null">
		WAITING_LEVEL=#{waitingLevel}
	</if>
	<if test="status != null">
		, status=#{status}
	</if>
     WHERE id=#{id}
    </update>
    
    
    <select id="listForInf" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="map">
		select
			ap.id ap_id,
			ap.req_by,
			ap.created_by,
			w.by_time,
			ap.updated_time, 	
			objective,
			is_reason,
			reason,
			note,
			bank_type,
			bank,
			cost_control_to,
			cost_control_id,
			total,
			ap.fund_id,
			doc_ref,
			budget_cc_type,
			budget_cc,
			pay_type,
			pay_dtl1,
			pay_dtl2,
			pay_dtl3,
			is_small_amount
		from pb2_exp_use ap
		left join pb2_main_workflow_next_actor a on ap.id = a.master_id --Next Actor
		left join pb2_main_workflow w on w.master_id = ap.id --Last Approver
		where ap.id=#{id}
    </select>
    
</mapper>
